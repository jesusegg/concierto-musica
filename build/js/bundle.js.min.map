{"version":3,"sources":["app.js","galeria.js"],"names":["navegacionFija","barra","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrollNav","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","seccion","target","attributes","href","value","console","log","scrollIntoView","behavior","crearGaleria","galeriaImagenes","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarImagen","alt","lista","appendChild","id","parseInt","overlay","body","cerrarImagen","textContent"],"mappings":"AAOA,SAAAA,iBAEA,MAAAC,EAAAC,SAAAC,cAAA,WAGA,IAAAC,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eAEAL,EAAAM,UAAAC,OAAA,QAGAP,EAAAM,UAAAE,IAAA,WAKAC,QAAAR,SAAAC,cAAA,WAGA,SAAAQ,YACAT,SAAAU,iBAAA,2BAEAC,SAAA,SAAAC,GACAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBACA,MAAAC,EAAAhB,SAAAC,cAAAa,EAAAG,OAAAC,WAAAC,KAAAC,OACAC,QAAAC,IAAAR,EAAAG,OAAAC,WAAAC,KAAAC,OACAJ,EAAAO,eAAA,CACAC,SAAA,iBC/BA,SAAAC,eACA,MAAAC,EAAA1B,SAAAC,cAAA,qBAEA,IAAA,IAAA0B,EAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,MAAAC,EAAA5B,SAAA6B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SACAC,EAAAG,QAAAC,SAAAL,EAGAC,EAAAK,QAAAC,cAEAN,EAAAO,IAAA,iBAAAR,EACA,MAAAS,EAAApC,SAAA6B,cAAA,MACAO,EAAAC,YAAAT,GACAF,EAAAW,YAAAD,IAMA,SAAAF,cAAApB,GAEA,MAAAwB,EAAAC,SAAAzB,EAAAG,OAAAc,QAAAC,UAGAJ,EAAA5B,SAAA6B,cAAA,OACAD,EAAAE,IAAA,oBAAAQ,SAEA,MAAAE,EAAAxC,SAAA6B,cAAA,OACAW,EAAAH,YAAAT,GACAY,EAAAnC,UAAAE,IAAA,WAGAiC,EAAAP,QAAA,WACAO,EAAAlC,SACAmC,EAAApC,UAAAC,OAAA,eAIA,MAAAoC,EAAA1C,SAAA6B,cAAA,KACAa,EAAAC,YAAA,IACAD,EAAArC,UAAAE,IAAA,cAGAmC,EAAAT,QAAA,WACAO,EAAAlC,SACAmC,EAAApC,UAAAC,OAAA,eAGAkC,EAAAH,YAAAK,GAGA,MAAAD,EAAAzC,SAAAC,cAAA,QACAwC,EAAAJ,YAAAG,GACAC,EAAApC,UAAAE,IAAA,cD1DAP,SAAAa,iBAAA,oBAAA,WACAJ,YAEAX,oBCHAE,SAAAa,iBAAA,oBAAA,WACAY","file":"bundle.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\r\n    scrollNav();\r\n\r\n    navegacionFija();\r\n});\r\n\r\n\r\nfunction navegacionFija() {\r\n\r\nconst barra = document.querySelector(\".header\")\r\n\r\n//Registrar el Intersection Observer\r\nconst observer = new IntersectionObserver (function(entries) {//api para registrar un evento/ entries nos da la informacion del elemento a observar\r\n    if(entries[0].isIntersecting) {\r\n            // console.log(\"Elemento visible\"); se hace para probar que funcione el codigo en consola\r\n            barra.classList.remove(\"fijo\");//cuando sea visible la clase .sobre-festival donde se ve la nav elimina la clase fijo que se encarga de dejar en la parte superior la barra de navegacion\r\n        } else {\r\n            // console.log(\"ya desaparecio\"); se hace de prueba\r\n            barra.classList.add(\"fijo\")//cuando la clase ya no sea visible agrega la clase fijo\r\n        }\r\n    });\r\n\r\n//Elemento a observar\r\nobserver.observe(document.querySelector(\".video\")); //observe es un metodo de IntersectionObserver que sirve para pasarle el elemnto a observar    el resultado que se puede ver en consola con un console.log es que saber si la clase que se selecciono esta siendo visible en pantalla o no\r\n}\r\n\r\nfunction scrollNav() {\r\n    const enlaces = document.querySelectorAll(\".navegacion-principal a\")\r\n   // cuando tengas una coleccion de elementos y quieras aplicar un addEvenListener debes iterar cara uno de lo contrario te dara un error\r\n    enlaces.forEach( function(enlace) {\r\n        enlace.addEventListener(\"click\",function(e) {\r\n            e.preventDefault();\r\n            const seccion = document.querySelector(e.target.attributes.href.value);//cada . da informacion mas especifica del objeto con el console.log se pueden obtener todos y aqui lo hacemos hasta obtener el id\r\n            console.log(e.target.attributes.href.value)\r\n            seccion.scrollIntoView({\r\n                behavior: \"smooth\"//scrollIntoView es una api de js\r\n            });\r\n        });\r\n    });\r\n}","document.addEventListener(\"DOMContentLoaded\", function() {\r\n    crearGaleria();\r\n});\r\n\r\nfunction crearGaleria() {\r\n    const galeriaImagenes = document.querySelector(\".galeria-imagenes\");\r\n\r\n    for(let i =1; i<=12; i++) { //cuidado si no se pone el menor igual <=12 se crea un bucle infinito //for por cada elemento de las imagenes que van numeradas de 1 al 12\r\n        const imagen = document.createElement(\"IMG\"); //crea la equiqueta img\r\n        imagen.src = `build/img/thumb/${i}.webp`; // crea la etiqueta img con su respectivo src por cada elemento de la carpeta thumb y lo puedes verificar con un console.log(imagen)\r\n        imagen.dataset.imagenId = i;//crea un id a cada imagen con i\r\n\r\n        //aÃ±adir la funcion de mostrarImagen\r\n        imagen.onclick = mostrarImagen\r\n\r\n        imagen.alt = `imagen galeria${i}`;//crea un nombre a cada imagen que hace referencia a su nombre\r\n        const lista = document.createElement(\"LI\") // crea un li \r\n        lista.appendChild(imagen); // agrega en una etiqueta lista a cada una de las imagenes que se crearon en consola \r\n        galeriaImagenes.appendChild(lista); //agrega esas listas a la clase galeria-imagenes\r\n        \r\n    }\r\n}\r\n\r\n//\r\nfunction mostrarImagen(e) {//e es el evento\r\n    //console.log(e.target.dataset.imagenId) //.target muestra el evento.dataset.imagen es bueno ir usando la consola para ir verificando que funcione el codigo\r\n    const id = parseInt(e.target.dataset.imagenId);\r\n\r\n    // Generar la imagen\r\n    const imagen = document.createElement(\"IMG\");\r\n    imagen.src = `build/img/grande/${id}.webp`;\r\n    \r\n    const overlay = document.createElement(\"DIV\");\r\n    overlay.appendChild(imagen);\r\n    overlay.classList.add(\"overlay\");\r\n\r\n    //cuando se da click, cerrar la imagen\r\n    overlay.onclick = function() {\r\n        overlay.remove();\r\n        body.classList.remove(\"fijar-body\");\r\n    }\r\n\r\n    //boton para cerrar imagen\r\n    const cerrarImagen = document.createElement(\"P\");\r\n    cerrarImagen.textContent = \"X\";\r\n    cerrarImagen.classList.add(\"btn-cerrar\");\r\n\r\n    //cuando se presiona se cierra la imagen\r\n    cerrarImagen.onclick = function() {\r\n        overlay.remove();\r\n        body.classList.remove(\"fijar-body\");\r\n    }\r\n\r\n    overlay.appendChild(cerrarImagen);\r\n\r\n    //mostrar en el html\r\n    const body = document.querySelector(\"body\");\r\n    body.appendChild(overlay);\r\n    body.classList.add(\"fijar-body\");\r\n}"]}